<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration SYSTEM "http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/xml/doc-files/log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

<!-- Log4j 
자바기반의 로깅 유틸리티로 Apache에서 만든 오픈소스 라이브러리
로그가 너무 많이 출력될 경우 복잡하여 리소스 낭비가 되며 모든 로그를 지워버리면 에러의 원인을 찾기 어려울 수 있다
또한 프로그램 성능에 영향을 미친다

<구조>
Logger - 출력할 메시지를  Appender에 전달
Appender - 전달된 로그를 어디에 출력할 지 결정 (콘솔출력, 파일기록, DB저장 등)
Layout - 로그를 어떤 형식으로 출력할 지 결정

<레벨>
FATAL - 아주 심각한 에러가 발생한 상태를 나타낸다
ERROR - 어떠한 요청을 처리하는 중 문제가 발생한 상태를 나타낸다
WARN - 프로그램 실행에는 문제가 없지만, 향후 시스템 에러의 원인이 될수 있는 경고성 메시지를 나타낸다
INFO - 어떠한 상태변경과 같은 정보성 메시지를 나타낸다
DEBUG - 개발시 디버그 용도로 사용하는 메시지를 나타낸다
TRACE - 디버그 레벨이 너무 광범위한것을 해결하기 위해서 좀 더 상세한 이벤트를 나타낸다 -->
	<!-- Appenders -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%d %5 [%c] %m%n" />
		</layout>
	</appender>
	
	<appender name = "console-infolog" class="org.apache.log4j.ConsoleAppender">
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%d %5p %m%n"/>
		</layout>
	</appender>
	
	<!-- Application Loggers -->
	<logger name="first" additivity="false">
		<level value="debug" />
		<appender-ref ref="console"/>
	</logger>
	
	<!-- Query Loggers -->
	<logger name="jdbc.sqlonly" additivity="false">
	<level value="INFO"/>
	<appender-ref ref="console-infolog"/>
	</logger>
	
	<logger name="jdbc.resultsettable" additivity="false">
		<level value="INFO"/>
		<appender-ref ref="console"/>
	</logger>
	
	<!-- Root Logger -->
	<root>
		<priority value="off" />
		<appender-ref ref="console" />
	</root>
	
</log4j:configuration>
